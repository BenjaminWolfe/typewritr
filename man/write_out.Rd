% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write.R
\name{write_out}
\alias{write_out}
\title{Write out a list of words}
\usage{
write_out(word_list, quoted = FALSE, human = TRUE,
  separator = ifelse(sum(grepl(",", word_list)), ";", ","),
  placement = ifelse(human & grepl("United States", Sys.getlocale()),
  "US", "international"), oxford = TRUE, quote_type = c("double",
  "single"), curly = human, collapse = c("and", "&", "+", "or",
  "and/or"), ending = c("", ".", ","))
}
\arguments{
\item{word_list}{Character vector. Words to be listed out.}

\item{quoted}{Logical. If TRUE, will wrap each word in quotation marks.}

\item{human}{Logical. If FALSE, will leave out the final conjunction.}

\item{separator}{Character. What punctuation do you want between elements?
Defaults to semicolon if any element contains a comma,
comma otherwise.}

\item{placement}{Character. If "US", will place commas and periods inside
any quotation marks (and other punctuation outside them).
If "international", will place all punctuation outside
quotation marks. Defaults to "US" if \code{Sys.getlocale}
places you in the US and human is set to TRUE.}

\item{oxford}{Logical. Use an Oxford comma? Defaults to TRUE.
Parameter is ignored if separator is not a comma.}

\item{quote_type}{Character. "double" for double quotes, "single" for single.}

\item{curly}{Logical. TRUE for Unicode curly quotes,
FALSE for straight ASCII quotes.
Defaults to FALSE if human == FALSE, TRUE otherwise.}

\item{collapse}{Character. What final conjunction or sign do you want?
"and", an ampersand, a plus sign, an "or", an "and/or"...?}

\item{ending}{Character (e.g. period, comma, or zero-length string).
What character if any do you need inside the final
quotation mark, or at the end of the function"s output?}
}
\value{
Character. A pretty, human-readable list.
}
\description{
Write out a list of words
}
\examples{
write_out("apples")
write_out(c("apples", "oranges"))
write_out(c("apples", "oranges"), quoted = TRUE)
write_out(
  c("hello, my friend", "welcome", "enter"),
  quoted = TRUE,
  ending = "."
)
write_out(c("apples", "oranges"), quoted = TRUE, quote_type = "single")
write_out(
  c("apples", "oranges"),
  quoted = TRUE,
  quote_type = "single",
  curly = FALSE
)
write_out(c("apples", "oranges", "bananas"))
write_out(c("apples", "oranges", "bananas"), quoted = TRUE, ending = ".")
write_out(c("apples", "oranges", "bananas"), oxford = FALSE)
write_out(c("apples", "oranges", "bananas"), collapse = "or")
write_out(c("apples", "oranges", "bananas"), human = FALSE)
write_out(character(0))
}
